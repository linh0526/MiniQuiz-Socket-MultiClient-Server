import React from 'react';
import { Link, useLocation, useNavigate } from 'react-router-dom';
import { useGame } from '../../contexts/GameContext';
import { useTheme } from '../../contexts/ThemeContext';
import { socket } from '../../socket';

const Header = () => {
  const { roomId, players, gameState, isHost } = useGame();
  const { isDarkMode, toggleTheme } = useTheme();
  const location = useLocation();
  const navigate = useNavigate();

  const getGameStateText = () => {
    switch (gameState) {
      case 'lobby': return 'ƒêang ch·ªù';
      case 'playing': return 'ƒêang ch∆°i';
      case 'results': return 'K·∫øt qu·∫£';
      default: return 'Lobby';
    }
  };

  const getGameStateColor = () => {
    switch (gameState) {
      case 'lobby': return '#f39c12';
      case 'playing': return '#27ae60';
      case 'results': return '#8e44ad';
      default: return '#3498db';
    }
  };

  const handleHomeClick = (e) => {
    // N·∫øu ƒëang ·ªü trang ch·ªß v√† c√≥ roomId, kh√¥ng l√†m g√¨
    if (location.pathname === '/home' && roomId) {
      e.preventDefault();
      return;
    }
    
    // N·∫øu ƒëang ·ªü trang kh√°c v√† c√≥ roomId, h·ªèi c√≥ mu·ªën r·ªùi ph√≤ng kh√¥ng
    if (location.pathname !== '/home' && roomId) {
      e.preventDefault();
      if (window.confirm('B·∫°n c√≥ mu·ªën r·ªùi ph√≤ng ƒë·ªÉ v·ªÅ trang ch·ªß?')) {
        socket.emit('leave_room', { roomId });
        navigate('/home');
      }
      return;
    }
    
    // N·∫øu kh√¥ng c√≥ roomId, cho ph√©p navigate b√¨nh th∆∞·ªùng
  };

  return (
    <header className="app-header">
      <div className="header-content">
        <div className="header-left">
          <Link to="/home" className="header-title" onClick={handleHomeClick}>
            <h1>üéÆ Quiz Game</h1>
          </Link>
          {roomId && (location.pathname === '/' || location.pathname === '/home') && (
            <div className="room-info">
              <span className="room-id">Ph√≤ng: {roomId}</span>
              <span 
                className="game-state"
                style={{ color: getGameStateColor() }}
              >
                {getGameStateText()}
              </span>
            </div>
          )}
        </div>

        <div className="header-right">
          <nav className="header-nav">
            <Link 
              to="/home" 
              className={`nav-link ${location.pathname === '/lobby' ? 'active' : ''}`}
            >
              üè† Trang ch·ªß
            </Link>
            {roomId && (
              <Link 
                to="/admin" 
                className={`nav-link ${location.pathname === '/admin' ? 'active' : ''}`}
              >
                ‚öôÔ∏è Admin
              </Link>
            )}
          </nav>

          <div className="header-info">
            {roomId && (location.pathname === '/' || location.pathname === '/lobby') && (
              <div className="players-count">
                üë• {players.length} ng∆∞·ªùi ch∆°i
              </div>
            )}
            
            {isHost && (location.pathname === '/' || location.pathname === '/lobby') && (
              <div className="host-badge">
                üëë Host
              </div>
            )}
            
            <button 
              className="theme-toggle-btn"
              onClick={toggleTheme}
              title={isDarkMode ? 'Chuy·ªÉn sang ch·∫ø ƒë·ªô s√°ng' : 'Chuy·ªÉn sang ch·∫ø ƒë·ªô t·ªëi'}
            >
              {isDarkMode ? '‚òÄÔ∏è' : 'üåô'}
            </button>
          </div>
        </div>
      </div>
    </header>
  );
};

export default Header;
